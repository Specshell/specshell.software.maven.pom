name: Release workflow
on:
  push:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - uses: s4u/maven-settings-action@v2.2.0
      with:
        servers: |
            [{
                "id": "specshell",
                "username": "${env.NEXUS_USER}",
                "password": "${env.NEXUS_PASSWORD}"
            }]

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Configure git
      run: |
        git config --global committer.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global committer.name "GitHub Actions"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"

    - name: Checkout main branch
      run: git checkout main

    - name: Set Version
      run: |
        version=$(grep --color=never -oPm1 "(?<=<version>)[^<]+" "pom.xml")
        echo "RELEASE_VERSION=${version%-SNAPSHOT}" >> $GITHUB_ENV

    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.SPECSHELL_PUSH_APP_ID }}
        private_key: ${{ secrets.SPECSHELL_PUSH_APP_PEM }}

    - name: Perform release
      env:
        TOKEN: ${{ steps.generate_token.outputs.token }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: mvn -B -V --no-transfer-progress --file pom.xml release:prepare release:perform -Dusername=x-access-token -Dpassword=$TOKEN

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.RELEASE_VERSION }}
        release_name: v${{ env.RELEASE_VERSION }}
        commitish: main
        draft: false
        prerelease: false
